native _rand, _sqrt;

code/await Rock_Big (
        var& SDL_Texture tex,
    ) => void
do
    var SDL_Rect rect = val SDL_Rect(_,_, tex.height,tex.height);
    var float vx = _rand()%(WIN_W/5) + 1;
    var float vy = _rand()%(WIN_H/5) + 1;
    do
        rect.x = WIN_W/3 + _rand()%WIN_W/3;
        if (_rand()%2) as bool then
            vx = -vx;
        end
        if (_rand()%2) as bool then
            rect.y = 0;
        else
            rect.y = WIN_H;
            vy = -vy;
        end
    end

    var Movable obj = val Movable(Axis(rect.x, vx, 0),
                                  Axis(rect.y, vy, 0));

    watching Move(&rect, &obj) do
        var SDL_Rect clip = val SDL_Rect(0,0, tex.height,tex.height);
        par do
            var float v = _sqrt(obj.x.v*obj.x.v + obj.y.v*obj.y.v);
            var float p = 0;
            var int dt;
            every dt in SDL_DT do
                p = p + v*dt/1000;
                clip.x = ((p/rect.w) as int)*rect.w % (6*rect.w);
            end
        with
            every SDL_REDRAW do
                var SDL_Rect r = val SDL_Rect(rect.x-rect.w/2,
                                              rect.y-rect.h/2,
                                              rect.w, rect.h);
                _SDL_RenderCopy(outer.ren, tex.ptr, (&&clip as _SDL_Rect&&),
                                                    (&&r as _SDL_Rect&&));
            end
        end
    end
end


