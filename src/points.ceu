code/await Points (var SDL_Point pos)
                    //=> (event& void go_inc, var& int v)
                    => (var& int v)
                        => void
do
    var int v_ = 0;
    v = &v_;

    var int v0=0, v1=0, v2=0;

    var& SDL_Texture tex = &outer.tex_nums[0];
    var SDL_Rect rect = val SDL_Rect(pos.x,pos.y, tex.width,tex.height);

    par do
        every 1s do
            v_ = v_ + 1;
            v_ = v_ % 1000;
            v0 =     v_ % 10;
            v1 =  v_/10 % 10;
            v2 = v_/100 % 10;
        end
    with
        every SDL_REDRAW do
            var SDL_Rect r = rect;
            _SDL_RenderCopy(outer.ren, outer.tex_nums[v0].ptr,
                            null, (&&r as _SDL_Rect&&));
            if v_ >= 10 then
                r.x = r.x - r.w;
                _SDL_RenderCopy(outer.ren, outer.tex_nums[v1].ptr,
                                null, (&&r as _SDL_Rect&&));
                if v_ >= 100 then
                    r.x = r.x - r.w;
                    _SDL_RenderCopy(outer.ren, outer.tex_nums[v2].ptr,
                                    null, (&&r as _SDL_Rect&&));
                end
            end
        end
    end
end
